# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/mfd/brcm,bcm59056.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: BCM590xx Power Management Unit MFD

maintainers:
  - Artur Weber <aweber.kernel@gmail.com>

properties:
  compatible:
    enum:
      - "brcm,bcm59054"
      - "brcm,bcm59056"

  reg:
    maxItems: 1

  interrupts:
    maxItems: 1

  regulators:
    type: object
    description: Container node for regulators.

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: "brcm,bcm59056"
    then:
      properties:
        regulators:
          # The valid regulator node names for BCM59056 are:
          #   rfldo, camldo1, camldo2, simldo1, simldo2, sdldo, sdxldo,
          #   mmcldo1, mmcldo2, audldo, micldo, usbldo, vibldo,
          #   csr, iosr1, iosr2, msr, sdsr1, sdsr2, vsr,
          #   gpldo1, gpldo2, gpldo3, gpldo4, gpldo5, gpldo6,
          #   vbus
          patternProperties:
            "^(cam|sim|mmc)ldo[1-2]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^(rf|sd|sdx|aud|mic|usb|vib)ldo$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^(c|m|v)sr$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^(io|sd)sr[1-2]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^gpldo[1-6]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

          properties:
            "vbus":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

          additionalProperties: false

  - if:
      properties:
        compatible:
          contains:
            const: "brcm,bcm59054"
    then:
      properties:
        regulators:
          # The valid regulator node names for BCM59054 are:
          #   rfldo, camldo1, camldo2, simldo1, simldo2, sdldo, sdxldo,
          #   mmcldo1, mmcldo2, audldo, micldo, usbldo, vibldo,
          #   csr, iosr1, iosr2, mmsr, sdsr1, sdsr2, vsr,
          #   gpldo1, gpldo2, gpldo3, tcxldo, lvldo1, lvldo2
          patternProperties:
            "^(cam|sim|mmc)ldo[1-2]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^(rf|sd|sdx|aud|mic|usb|vib|tcx)ldo$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^(c|mm|v)sr$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^(io|sd)sr[1-2]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^gpldo[1-3]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

            "^lvldo[1-2]$":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

          properties:
            "vbus":
              type: object
              $ref: /schemas/regulator/regulator.yaml#

          additionalProperties: false

required:
  - compatible
  - reg
  - interrupts

additionalProperties: false

examples:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>

    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        pmu: bcm59056@8 {
            compatible = "brcm,bcm59056";
            reg = <0x08>;
            interrupts = <0 215 IRQ_TYPE_LEVEL_HIGH>;
            regulators {
                rfldo_reg: rfldo {
                    regulator-min-microvolt = <1200000>;
                    regulator-max-microvolt = <3300000>;
                };
            };
        };
    };
