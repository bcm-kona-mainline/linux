// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Device tree for Samsung Galaxy Grand Neo (GT-I9060).
 *
 * Copyright (c) 2025 Artur Weber <aweber.kernel@gmail.com>
 */

/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>

#include "bcm23550.dtsi"

/ {
	model = "Samsung Galaxy Grand Neo (GT-I9060)";
	compatible = "samsung,baffinlite", "brcm,bcm23550";
	chassis-type = "handset";

	chosen {
		stdout-path = "/slaves@3e000000/serial@2:115200n8";
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0x80000000 0x3e200000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		simplefb: framebuffer@9e980000 {
			reg = <0x9e980000 (480 * 800 * 4)>;
			no-map;
		};
	};

	/* Buttons */
	gpio-keys {
		compatible = "gpio-keys";

		key-volume-up {
			label = "Volume Up";
			gpios = <&gpio 9 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEUP>;
		};

		key-home {
			label = "Home";
			gpios = <&gpio 10 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_HOMEPAGE>;
		};

		key-volume-down {
			label = "Volume Down";
			gpios = <&gpio 11 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEDOWN>;
		};
	};

	/* Touchkey LED */
	led-heartbeat {
		compatible = "regulator-led";
		vled-supply = <&gpldo3_reg>;
		color = <LED_COLOR_ID_WHITE>;

		/* Temporary, drop before upstreaming */
		function = LED_FUNCTION_STATUS;
		linux,default-trigger = "heartbeat";
	};

	/* USB switch */
	i2c-musb {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "i2c-gpio";
		sda-gpios = <&gpio 113 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
		scl-gpios = <&gpio 114 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
		i2c-gpio,delay-us = <2>;

		musb@25 {
			compatible = "fcs,fsa9480";
			reg = <0x25>;
			interrupt-parent = <&gpio>;
			interrupts = <56 IRQ_TYPE_LEVEL_HIGH>;
		};
	};

	/* GPIO regulator for WiFi */
	wl_reg: regulator-gpio-wlan {
		compatible = "regulator-fixed";
		regulator-name = "WL_REG_ON";
		regulator-min-microvolt = <3000000>;
		regulator-max-microvolt = <3000000>;
		startup-delay-us = <100000>;
		gpio = <&gpio 3 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	framebuffer@9e980000 {
		compatible = "simple-framebuffer";
		reg = <0x9e980000 (480 * 800 * 4)>;
		width = <480>;
		height = <800>;
		stride = <(480 * 4)>;
		format = "a8r8g8b8";
		status = "okay";
	};
};

&uartb {
	status = "okay";
	clock-frequency = <48000000>;

	bluetooth {
		compatible = "brcm,bcm4330-bt";

		shutdown-gpios = <&gpio 28 GPIO_ACTIVE_HIGH>;
		device-wakeup-gpios = <&gpio 32 GPIO_ACTIVE_HIGH>;
		host-wakeup-gpios = <&gpio 72 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio 71 GPIO_ACTIVE_LOW>;
		interrupt-parent = <&gpio>;
		interrupts = <72 IRQ_TYPE_EDGE_FALLING>;
	};
};

&uartb2 {
	status = "okay";
	clock-frequency = <26000000>;
};

&uartb3 {
	status = "okay";
	clock-frequency = <26000000>;
};

&usbotg {
	vusb_d-supply = <&usbldo_reg>;
	vusb_a-supply = <&iosr1_reg>;
	status = "okay";
};

&usbphy {
	status = "okay";
};

&bsc3 {
	clock-frequency = <400000>;

	pinctrl-0 = <&bsc3_pins>;
	pinctrl-names = "default";

	status = "okay";

	magnetometer@c {
		compatible = "alps,hscdtd008a";
		reg = <0x0c>;
	};

	accel@18 {
		compatible = "bosch,bma254";
		reg = <0x18>;

		interrupt-parent = <&gpio>;
		interrupts = <92 IRQ_TYPE_EDGE_RISING>;

		mount-matrix = "-1", "0", "0",
			       "0", "-1", "0",
			       "0", "0", "-1";
		vdd-supply = <&tcxldo_reg>;
		vddio-supply = <&iosr1_reg>;
	};

	proximity@44 {
		compatible = "sharp,gp2ap002s00f";
		reg = <0x44>;

		interrupt-parent = <&gpio>;
		interrupts = <89 IRQ_TYPE_EDGE_FALLING>;

		vdd-supply = <&tcxldo_reg>; /* SENSOR_3.3V */
		vio-supply = <&gpldo1_reg>; /* SENSOR_LED_3.3V */

		sharp,proximity-far-hysteresis = /bits/ 8 <0x2f>;
		sharp,proximity-close-hysteresis = /bits/ 8 <0x0c>;
	};
};

&bsc4 {
	clock-frequency = <400000>;

	pinctrl-0 = <&bsc4_pins>;
	pinctrl-names = "default";

	status = "okay";

	/* Melfas MMS144 touchscreen, using the mms136 compatible for now */
	touchscreen@48 {
		compatible = "melfas,mms136";
		reg = <0x48>;

		interrupt-parent = <&gpio>;
		interrupts = <73 IRQ_TYPE_EDGE_FALLING>;

		vdd-supply = <&gpldo2_reg>;
		avdd-supply = <&iosr1_reg>;

		touchscreen-size-x = <480>;
		touchscreen-size-y = <800>;

		linux,keycodes = <KEY_MENU KEY_BACK>;
	};
};

&pmu_bsc {
	clock-frequency = <3400000>; /* 3.2mhz? Downstream refers to this as a HS bus, but it doesn't give any speed information other than that. */

	pinctrl-0 = <&pmbsc_pins>;
	pinctrl-names = "default";

	status = "okay";

	pmu: pmu@8 {
		compatible = "brcm,bcm59054";
		reg = <0x08>;
		interrupt-parent = <&gpio>;
		interrupts = <29 IRQ_TYPE_EDGE_FALLING>;

		regulators {
			rfldo_reg: rfldo {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				/*regulator-allowed-modes = <0x2 0x4 0x8>; */ /* NORMAL, IDLE, STANDBY */
				/*regulator-initial-mode = <0x8>; */ /* REGULATOR_MODE_STANDBY */
			};

			camldo1_reg: camldo1 {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				/*regulator-initial-mode = <0x8>;*/ /* REGULATOR_MODE_STANDBY */
			};

			camldo2_reg: camldo2 {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				/*regulator-initial-mode = <0x8>;*/ /* REGULATOR_MODE_STANDBY */
			};

			simldo1_reg: simldo1 {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				/*regulator-allowed-modes = <0x2 0x4 0x8>;*/ /* NORMAL, IDLE, STANDBY */
			};

			simldo2_reg: simldo2 {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				/*regulator-allowed-modes = <0x2 0x4 0x8>;*/ /* NORMAL, IDLE, STANDBY */
			};

			sdldo_reg: sdldo {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
			};

			sdxldo_reg: sdxldo {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
			};

			mmcldo1_reg: mmcldo1 {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
			};

			mmcldo2_reg: mmcldo2 {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
			};

			audldo_reg: audldo {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				/*regulator-allowed-modes = <0x2 0x4 0x8>;*/ /* NORMAL, IDLE, STANDBY */
				/*regulator-initial-mode = <0x8>;*/ /* REGULATOR_MODE_STANDBY */
			};

			usbldo_reg: usbldo {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
			};

			micldo_reg: micldo {
				/* This regulator is locked at 1.8v */
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};

			vibldo_reg: vibldo {
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
			};

			gpldo1_reg: gpldo1 {
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
			};

			gpldo2_reg: gpldo2 {
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
			};

			gpldo3_reg: gpldo3 {
				regulator-min-microvolt = <3300000>; /* technically 1.2v but 3v3 is required for led */
				regulator-max-microvolt = <3300000>;
			};

			tcxldo_reg: tcxldo {
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			lvldo1_reg: lvldo1 {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1800000>;
			};

			lvldo2_reg: lvldo2 {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1786000>;
			};

			vsr_reg: vsr {
				regulator-min-microvolt = <860000>;
				regulator-max-microvolt = <1800000>;
			};

			csr_reg: csr {
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1440000>;
				regulator-always-on;
				/* regulator-initial-mode = <0x8>; */ /* REGULATOR_MODE_STANDBY */
			};

			mmsr_reg: mmsr {
				regulator-min-microvolt = <860000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;			
				/* regulator-initial-mode = <0x4>; */ /* REGULATOR_MODE_IDLE */
			};

			sdsr1_reg: sdsr1 {
				regulator-min-microvolt = <860000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;			
				/* regulator-initial-mode = <0x4>; */ /* REGULATOR_MODE_IDLE */
			};

			sdsr2_reg: sdsr2 {
				regulator-min-microvolt = <860000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;			
				/* regulator-initial-mode = <0x4>; */ /* REGULATOR_MODE_IDLE */
			};

			iosr1_reg: iosr1 {
				regulator-min-microvolt = <860000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				/* regulator-initial-mode = <0x4>; */ /* REGULATOR_MODE_IDLE */
			};

			iosr2_reg: iosr2 {
				regulator-min-microvolt = <860000>;
				regulator-max-microvolt = <1800000>;
			};
		};
	};
};

/* SD card */
&sdio1 {
	max-frequency = <48000000>;

	cd-gpios = <&gpio 91 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	vmmc-supply = <&sdldo_reg>;
	vqmmc-supply = <&sdxldo_reg>;

	pinctrl-0 = <&sd_width4_pins>;
	pinctrl-names = "default";

	status = "okay";
};

/* Internal storage */
&sdio2 {
	max-frequency = <52000000>;

	keep-power-in-suspend;
	non-removable;
	bus-width = <8>;

	pinctrl-0 = <&mmc0_width8_pins>;
	pinctrl-names = "default";

	status = "okay";
};

/* WiFi */
&sdio3 {
	max-frequency = <48000000>;

	/* Actually a regulator for the WiFi chip */
	vmmc-supply = <&wl_reg>;

	#address-cells = <1>;
	#size-cells = <0>;

	pinctrl-0 = <&mmc1_width4_pins>;
	pinctrl-names = "default";

	keep-power-in-suspend;
	non-removable;

	status = "okay";

	wifi@1 {
		compatible = "brcm,bcm4330-fmac", "brcm,bcm4329-fmac";
		reg = <1>;

		interrupt-parent = <&gpio>;
		interrupts = <74 IRQ_TYPE_EDGE_FALLING>;
		interrupt-names = "host-wake";
	};
};
